server.port=8084

spring.application.name=PAYMENT-SERVICE
#spring.config.import=optional:configserver:http://localhost:8888

eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/

# RabbitMQ or Kafka
# Producer properties
spring.rabbitmq.addresses=rabbitmq:5672
spring.kafka.bootstrap-servers=kafka:9092
spring.cloud.stream.kafka.binder.brokers=kafka:9092
spring.cloud.stream.default-binder=rabbit
spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.bindings.output.destination=payment_reservations_topic
spring.cloud.stream.bindings.output.group=group_producer_payment
# Common Kafka Properties
auto.create.topics.enable=true
spring.cloud.function.definition=inputFlight;inputHotel;inputCar
# Consumer properties: FLIGHTS
spring.cloud.stream.bindings.inputFlight-in-0.content-type=application/json
spring.cloud.stream.bindings.inputFlight-in-0.group=group_consumer_payment
spring.cloud.stream.bindings.inputFlight-in-0.destination=flights_reservations_topic
spring.cloud.stream.bindings.inputFlight-in-0.consumer.max-attempts=1
# Consumer properties: HOTELS
spring.cloud.stream.bindings.inputHotel-in-0.content-type=application/json
spring.cloud.stream.bindings.inputHotel-in-0.group=group_consumer_payment
spring.cloud.stream.bindings.inputHotel-in-0.destination=hotels_reservations_topic
spring.cloud.stream.bindings.inputHotel-in-0.consumer.max-attempts=1
# Consumer properties: CARS
spring.cloud.stream.bindings.inputCar-in-0.content-type=application/json
spring.cloud.stream.bindings.inputCar-in-0.group=group_consumer_payment
spring.cloud.stream.bindings.inputCar-in-0.destination=cars_reservations_topic
spring.cloud.stream.bindings.inputCar-in-0.consumer.max-attempts=1

# Neo4J
spring.neo4j.uri=bolt://neo4j:7687
spring.neo4j.authentication.username=neo4j
spring.neo4j.authentication.password=password
spring.data.neo4j.database=neo4j
spring.jpa.hibernate.ddl-auto=update

### Insert Collection of Cars
POST {{hostname}}/car-service/api/cars-booking
Content-Type: application/json

[{
  "brand": "Mercedes-Benz",
  "model": "Class A",
  "license": "AAA-0000",
  "costPerDay": 89.50,
  "availabilities": [{
    "startDate": 1693519200000,
    "endDate": 1693864800000
  },{
    "startDate": 1694296800000,
    "endDate": 1695420000000
  }]
},
  {
    "brand": "Mercedes-Benz AMG",
    "model": "Class EQE",
    "license": "EQE-0000",
    "costPerDay": 236.00,
    "availabilities": [{
      "startDate": 1695074400000,
      "endDate": 1695506400000
    }]
  },
  {
    "brand": "Mercedes-Benz AMG",
    "model": "Class EQA",
    "license": "AQE-0000",
    "costPerDay": 298.47,
    "availabilities": [{
      "startDate": 1000000000000,
      "endDate": 3000000000000
    }]
  },
  {
    "brand": "Mercedes-Benz AMG",
    "model": "Class EQB",
    "license": "BQE-0000",
    "costPerDay": 298.47,
    "availabilities": [{
      "startDate": 1000000000000,
      "endDate": 3000000000000
    }]
  },
  {
    "brand": "Mercedes-Benz AMG",
    "model": "Class EQS",
    "license": "SQE-0000",
    "costPerDay": 298.47,
    "availabilities": [{
      "startDate": 1000000000000,
      "endDate": 3000000000000
    }]
  },
  {
    "brand": "Mercedes-Benz AMG",
    "model": "Class EQV",
    "license": "VQE-0000",
    "costPerDay": 298.47,
    "availabilities": [{
      "startDate": 1000000000000,
      "endDate": 3000000000000
    }]
  }]

> {%
    if (response.status === 201 && response.body.data != undefined ) {
        for (let i = 0; i < response.body.data.length; i++) {
            if (response.body.data[i].license == "AQE-0000") {
                client.global.set("car_id_1", response.body.data[i].id);
            } else if (response.body.data[i].license == "BQE-0000") {
                client.global.set("car_id_2", response.body.data[i].id);
            } else if (response.body.data[i].license == "SQE-0000") {
                client.global.set("car_id_3", response.body.data[i].id);
            } else if (response.body.data[i].license == "VQE-0000") {
                client.global.set("car_id_4", response.body.data[i].id);
            }
        }
    }
%}

### Insert Collection of HOTELS
POST {{hostname}}/hotel-service/api/hotels-booking
Content-Type: application/json

[{
  "name": "Grand Hotel Centro",
  "direction": "Calle Falsa Centro 123, Torrevieja 03183 - Alicante",
  "costPerNight": 6300,
  "rooms": [{
    "title": "Habitacion individual Centro A",
    "peopleCapacity": 1,
    "availabilities": [{
      "startDate": 1000000000000,
      "endDate": 3000000000000
    }]
  },{
    "title": "Habitacion doble Centro B",
    "peopleCapacity": 2,
    "availabilities": [{
      "startDate": 1694988000000,
      "endDate": 1695592800000
    }]
  }]
},
  {
    "name": "Grand Hotel Norte",
    "direction": "Calle Falsa Norte 123, Torrevieja 03183 - Alicante",
    "costPerNight": 6300,
    "rooms": [{
      "title": "Habitacion individual Norte A",
      "peopleCapacity": 1,
      "availabilities": [{
        "startDate": 1000000000000,
        "endDate": 3000000000000
      }]
    }]
  },
  {
    "name": "Grand Hotel Sur",
    "direction": "Calle Falsa Sur 123, Torrevieja 03183 - Alicante",
    "costPerNight": 6300,
    "rooms": [{
      "title": "Habitacion individual Sur A",
      "peopleCapacity": 1,
      "availabilities": [{
        "startDate": 1000000000000,
        "endDate": 3000000000000
      }]
    }]
  },
  {
    "name": "Grand Hotel Este",
    "direction": "Calle Falsa Este 123, Torrevieja 03183 - Alicante",
    "costPerNight": 6300,
    "rooms": [{
      "title": "Habitacion individual Este A",
      "peopleCapacity": 1,
      "availabilities": [{
        "startDate": 1000000000000,
        "endDate": 3000000000000
      }]
    }]
  },
  {
    "name": "Little Hotel",
    "direction": "Calle Fake 123, Torrevieja 03183 - Alicante",
    "costPerNight": 4599,
    "rooms": [{
      "title": "Habitacion Gold",
      "peopleCapacity": 2,
      "availabilities": [{
        "startDate": 1695160800000,
        "endDate": 1695592800000
      }]
    },{
      "title": "Habitacion Diamond",
      "peopleCapacity": 4,
      "availabilities": [{
        "startDate": 1695420000000,
        "endDate": 1695592800000
      }]
    }]
  }]
> {%
    if (response.status === 201 && response.body.data != undefined ) {
        for (let i = 0; i < response.body.data.length; i++) {
            if (response.body.data[i].name == "Grand Hotel Centro" && response.body.data[i].rooms != undefined && response.body.data[i].rooms.length > 0) {
                for (let j = 0; j < response.body.data[i].rooms.length; j++) {
                    if (response.body.data[i].rooms[j].title == "Habitacion individual Centro A") {
                        client.global.set("room_id_1", response.body.data[i].rooms[j].id);
                        break;
                    }
                }
            } else if (response.body.data[i].name == "Grand Hotel Norte" && response.body.data[i].rooms != undefined && response.body.data[i].rooms.length > 0) {
                for (let j = 0; j < response.body.data[i].rooms.length; j++) {
                    if (response.body.data[i].rooms[j].title == "Habitacion individual Norte A") {
                        client.global.set("room_id_2", response.body.data[i].rooms[j].id);
                        break;
                    }
                }
            } else if (response.body.data[i].name == "Grand Hotel Sur" && response.body.data[i].rooms != undefined && response.body.data[i].rooms.length > 0) {
                for (let j = 0; j < response.body.data[i].rooms.length; j++) {
                    if (response.body.data[i].rooms[j].title == "Habitacion individual Sur A") {
                        client.global.set("room_id_3", response.body.data[i].rooms[j].id);
                        break;
                    }
                }
            } else if (response.body.data[i].name == "Grand Hotel Este" && response.body.data[i].rooms != undefined && response.body.data[i].rooms.length > 0) {
                for (let j = 0; j < response.body.data[i].rooms.length; j++) {
                    if (response.body.data[i].rooms[j].title == "Habitacion individual Este A") {
                        client.global.set("room_id_4", response.body.data[i].rooms[j].id);
                        break;
                    }
                }
            }
        }
    }
%}

### Insert Collection of Flights
POST {{hostname}}/flight-service/api/flights-booking
Content-Type: application/json

[{
  "reference": "G-000",
  "airline": "Iberia",
  "departureAirportCode": "MAD",
  "departureAirportName": "Madrid Barajas",
  "departureTime": 1695024000000,
  "arrivalAirportCode": "TOR",
  "arrivalAirportName": "Torrevieja",
  "arrivalTime": 1695029400000,
  "cost": 56790,
  "remainingSeats": 5
},
  {
  "reference": "G-111",
  "airline": "Rayaner",
  "departureAirportCode": "MAD",
  "departureAirportName": "Madrid Barajas",
  "departureTime": 1695013200000,
  "arrivalAirportCode": "TOR",
  "arrivalAirportName": "Torrevieja",
  "arrivalTime": 1695022200000,
  "cost": 45990,
  "remainingSeats": 5
},
  {
  "reference": "G-222",
  "airline": "Iberia",
  "departureAirportCode": "MAD",
  "departureAirportName": "Madrid Barajas",
  "departureTime": 1695052800000,
  "arrivalAirportCode": "TOR",
  "arrivalAirportName": "Torrevieja",
  "arrivalTime": 1695058200000,
  "cost": 45990,
  "remainingSeats": 5
},
  {
    "reference": "G-333",
    "airline": "Iberia",
    "departureAirportCode": "MAD",
    "departureAirportName": "Madrid Barajas",
    "departureTime": 1695052800000,
    "arrivalAirportCode": "TOR",
    "arrivalAirportName": "Torrevieja",
    "arrivalTime": 1695058200000,
    "cost": 45990,
    "remainingSeats": 5
  }]

> {%
if (response.status === 201 && response.body.data != undefined ) {
    for (let i = 0; i < response.body.data.length; i++) {
        if (response.body.data[i].reference == "G-000") {
            client.global.set("flight_id_1", response.body.data[i].id);
        } else if (response.body.data[i].reference == "G-111") {
            client.global.set("flight_id_2", response.body.data[i].id);
        } else if (response.body.data[i].reference == "G-222") {
            client.global.set("flight_id_3", response.body.data[i].id);
        } else if (response.body.data[i].reference == "G-333") {
            client.global.set("flight_id_4", response.body.data[i].id);
        }
    }
}
 %}

### Book a FLIGHT
< {%
// Configure run_cycle value with other values to repeat tests.
// Values for run_cycle go from 1 to 4. Change it just changing the value and running again request starting from here to bottom (no need to insert values again).
client.global.set("run_cycle", "1");

client.global.set("flight_id", client.global.get("flight_id_" + client.global.get("run_cycle")));
 %}
POST {{hostname}}/flight-service/api/flights-booking/book/{{flight_id}}

> {%
if (response.status === 201 && response.body.data != undefined ) {
    client.global.set("reservation_id", response.body.data.id);
}
 %}

### Get All RESERVATIONS
GET {{hostname}}/payment-service/api/payments

### Book a HOTEL
< {%
    client.global.set("room_id", client.global.get("room_id_" + client.global.get("run_cycle")));
%}
POST {{hostname}}/hotel-service/api/hotels-booking/book/{{room_id}}
Content-Type: application/json

{
  "startDate": 1673352000000,
  "endDate": 1673776800000,
  "reservationID": "{{reservation_id}}"
}

### Get All RESERVATIONS
GET {{hostname}}/payment-service/api/payments

### Book a CAR
< {%
    client.global.set("car_id", client.global.get("car_id_" + client.global.get("run_cycle")));
%}
POST {{hostname}}/car-service/api/cars-booking/book/{{car_id}}
Content-Type: application/json

{
  "startDate": 1673352000000,
  "endDate": 1673776800000,
  "reservationID": "{{reservation_id}}"
}

###
POST {{hostname}}/car-service/api/cars-booking/book/cancel/{{reservation_id}}

### Get All RESERVATIONS
GET {{hostname}}/payment-service/api/payments

### Pay a reservation
POST {{hostname}}/payment-service/api/payments/{{reservation_id}}

### Get All RESERVATIONS
GET {{hostname}}/payment-service/api/payments

### Get All FLIGHT BOOKINGS
GET {{hostname}}/flight-service/api/flights-booking/book

### Get All HOTELS BOOKINGS
GET {{hostname}}/hotel-service/api/hotels-booking/book

### Get All CARS BOOKINGS
GET {{hostname}}/car-service/api/cars-booking/book

# QUERY FOR A SPECIFIC FLIGHT:
# match(fr:FlightReservation)-[r]-(f) where fr.id = "a4813822-027b-4a39-a5c7-0e3849dd62f9" return fr,f

# QUERY FOR A SPECIFIC HOTEL/ROOM:
# match(hr:HotelReservation)-[r]-(room)-[r2]-(x) where hr.id = "a4813822-027b-4a39-a5c7-0e3849dd62f9" return hr,r,room,r2,x

# QUERY FOR A SPECIFIC CAR:
# match(cr:CarReservation)-[r]-(c)-[r2]-(a) where cr.id = "a4813822-027b-4a39-a5c7-0e3849dd62f9" return cr,r,c,r2,a

# QUERY FOR A SPECIFIC RESERVATION:
# match(r:Reservation) where r.id = "a4813822-027b-4a39-a5c7-0e3849dd62f9" return r
